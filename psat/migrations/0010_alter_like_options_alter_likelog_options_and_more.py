# Generated by Django 4.2.5 on 2023-10-26 07:27

from django.db import migrations, models
import django.db.models.deletion
import taggit.managers


class Migration(migrations.Migration):

    dependencies = [
        ('reference', '0002_alter_psat_options_alter_psatproblem_options'),
        ('taggit', '0005_auto_20220424_2025'),
        ('psat', '0009_like_open_rate_solve_solvelog_ratelog_openlog_and_more'),
    ]

    operations = [
        migrations.AlterModelOptions(
            name='like',
            options={'ordering': ['-id']},
        ),
        migrations.AlterModelOptions(
            name='open',
            options={'ordering': ['-id']},
        ),
        migrations.AlterModelOptions(
            name='rate',
            options={'ordering': ['-id']},
        ),
        migrations.AlterModelOptions(
            name='solve',
            options={'ordering': ['-id']},
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(auto_now=True)),
                ('user_id', models.IntegerField()),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('problem', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)ss', to='reference.psatproblem')),
                ('tags', taggit.managers.TaggableManager(help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Tags')),
            ],
            options={
                'verbose_name': 'Tagged problem',
                'verbose_name_plural': 'Tagged problems',
                'unique_together': {('user_id', 'problem')},
            },
        ),
        migrations.CreateModel(
            name='Memo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(auto_now=True)),
                ('user_id', models.IntegerField()),
                ('content', models.TextField(verbose_name='내용')),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('problem', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)ss', to='reference.psatproblem')),
            ],
            options={
                'unique_together': {('user_id', 'problem')},
            },
        ),
    ]
