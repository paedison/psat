# Generated by Django 4.2.5 on 2023-10-26 04:48

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('reference', '0001_initial'),
        ('psat', '0008_alter_problem_answer'),
    ]

    operations = [
        migrations.CreateModel(
            name='Like',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(auto_now=True)),
                ('user_id', models.IntegerField()),
                ('problem', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)ss', to='reference.psatproblem')),
                ('is_liked', models.BooleanField()),
            ],
            options={
                'ordering': ['-problem__psat__year', 'problem__psat__id', 'problem__number'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Open',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(auto_now=True)),
                ('user_id', models.IntegerField()),
                ('problem', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)ss', to='reference.psatproblem')),
            ],
            options={
                'ordering': ['-problem__psat__year', 'problem__psat__id', 'problem__number'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Rate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(auto_now=True)),
                ('user_id', models.IntegerField()),
                ('problem', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)ss', to='reference.psatproblem')),
                ('rating', models.IntegerField(choices=[(1, '⭐️'), (2, '⭐️⭐️'), (3, '⭐️⭐️⭐️'), (4, '⭐️⭐️⭐️⭐️'), (5, '⭐️⭐️⭐️⭐️⭐️')])),
            ],
            options={
                'ordering': ['-problem__psat__year', 'problem__psat__id', 'problem__number'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Solve',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(auto_now=True)),
                ('user_id', models.IntegerField()),
                ('problem', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)ss', to='reference.psatproblem')),
                ('answer', models.IntegerField(choices=[(1, '①'), (2, '②'), (3, '③'), (4, '④'), (5, '⑤')])),
                ('is_correct', models.BooleanField()),
            ],
            options={
                'ordering': ['-problem__psat__year', 'problem__psat__id', 'problem__number'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SolveLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(auto_now=True)),
                ('user_id', models.IntegerField()),
                ('session_key', models.TextField(blank=True, null=True)),
                ('data_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='logs', to='psat.solve')),
                ('problem', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)ss', to='reference.psatproblem')),
                ('answer', models.IntegerField(choices=[(1, '①'), (2, '②'), (3, '③'), (4, '④'), (5, '⑤')])),
                ('is_correct', models.BooleanField()),
                ('repetition', models.IntegerField()),
            ],
            options={
                'ordering': ['id'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='RateLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(auto_now=True)),
                ('user_id', models.IntegerField()),
                ('session_key', models.TextField(blank=True, null=True)),
                ('data_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='logs', to='psat.rate')),
                ('problem', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)ss', to='reference.psatproblem')),
                ('rating', models.IntegerField(choices=[(1, '⭐️'), (2, '⭐️⭐️'), (3, '⭐️⭐️⭐️'), (4, '⭐️⭐️⭐️⭐️'), (5, '⭐️⭐️⭐️⭐️⭐️')])),
                ('repetition', models.IntegerField()),
            ],
            options={
                'ordering': ['id'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='OpenLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(auto_now=True)),
                ('user_id', models.IntegerField()),
                ('session_key', models.TextField(blank=True, null=True)),
                ('data_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='logs', to='psat.open')),
                ('problem', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)ss', to='reference.psatproblem')),
                ('repetition', models.IntegerField()),
            ],
            options={
                'ordering': ['id'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='LikeLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(auto_now=True)),
                ('user_id', models.IntegerField()),
                ('session_key', models.TextField(blank=True, null=True)),
                ('data_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='logs', to='psat.like')),
                ('problem', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)ss', to='reference.psatproblem')),
                ('is_liked', models.BooleanField()),
                ('repetition', models.IntegerField()),
            ],
            options={
                'ordering': ['id'],
                'abstract': False,
            },
        ),
    ]
