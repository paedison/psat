# Generated by Django 4.2.5 on 2023-12-09 05:50

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('reference', '0004_prime_primeproblem'),
        ('psat', '0012_rename_session_key_open_ip_address_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='Department',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128)),
            ],
            options={
                'verbose_name': '직렬',
                'verbose_name_plural': '직렬',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='PrimeDepartment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128)),
                ('exam', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='prime_units', to='reference.exam')),
            ],
            options={
                'verbose_name': '직렬',
                'verbose_name_plural': '직렬',
            },
        ),
        migrations.CreateModel(
            name='PsatUnit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128)),
                ('exam', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='units', to='reference.exam')),
            ],
            options={
                'verbose_name': '모집단위',
                'verbose_name_plural': '모집단위',
            },
        ),
        migrations.CreateModel(
            name='Unit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128)),
                ('ex', models.CharField(choices=[('행시', '5급공채/행정고시'), ('외시', '외교원/외무고시'), ('칠급', '7급공채'), ('민경', '민간경력'), ('견습', '견습'), ('입시', '입법고시')], max_length=2)),
            ],
            options={
                'verbose_name': '모집단위',
                'verbose_name_plural': '모집단위',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='TemporaryAnswer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('answer', models.IntegerField(verbose_name='제출 답안')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('problem', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='temporary_answers', to='psat.problem')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='temporary_answers', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': '답안(임시 저장용)',
                'verbose_name_plural': '답안(임시 저장용)',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.IntegerField(choices=[(2004, '2004년'), (2005, '2005년'), (2006, '2006년'), (2007, '2007년'), (2008, '2008년'), (2009, '2009년'), (2010, '2010년'), (2011, '2011년'), (2012, '2012년'), (2013, '2013년'), (2014, '2014년'), (2015, '2015년'), (2016, '2016년'), (2017, '2017년'), (2018, '2018년'), (2019, '2019년'), (2020, '2020년'), (2021, '2021년'), (2022, '2022년'), (2023, '2023년')])),
                ('serial', models.CharField(blank=True, max_length=20, null=True)),
                ('eoneo_score', models.FloatField(blank=True, null=True)),
                ('jaryo_score', models.FloatField(blank=True, null=True)),
                ('sanghwang_score', models.FloatField(blank=True, null=True)),
                ('psat_score', models.FloatField(blank=True, null=True)),
                ('department', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='students', to='score.department')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='students', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': '수험 정보',
                'verbose_name_plural': '수험 정보',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='PsatUnitDepartment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128)),
                ('unit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='departments', to='score.psatunit')),
            ],
            options={
                'verbose_name': '직렬',
                'verbose_name_plural': '직렬',
            },
        ),
        migrations.CreateModel(
            name='PsatTemporaryAnswer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user_id', models.IntegerField()),
                ('answer', models.IntegerField(verbose_name='제출 답안')),
                ('problem', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='temporary_answers', to='reference.psatproblem')),
            ],
            options={
                'verbose_name': '답안(임시 저장용)',
                'verbose_name_plural': '답안(임시 저장용)',
            },
        ),
        migrations.CreateModel(
            name='PsatStudent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user_id', models.IntegerField()),
                ('year', models.IntegerField()),
                ('serial', models.CharField(blank=True, max_length=20, null=True)),
                ('heonbeob_score', models.FloatField(default=0)),
                ('eoneo_score', models.FloatField(default=0)),
                ('jaryo_score', models.FloatField(default=0)),
                ('sanghwang_score', models.FloatField(default=0)),
                ('psat_score', models.FloatField(default=0)),
                ('department', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='students', to='score.psatunitdepartment')),
            ],
            options={
                'verbose_name': '수험 정보',
                'verbose_name_plural': '수험 정보',
            },
        ),
        migrations.CreateModel(
            name='PsatConfirmedAnswer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user_id', models.IntegerField()),
                ('answer', models.IntegerField(verbose_name='제출 답안')),
                ('confirmed_times', models.IntegerField(default=1, verbose_name='확정 횟수')),
                ('problem', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='confirmed_answers', to='reference.psatproblem')),
            ],
            options={
                'verbose_name': '답안(최종 제출용)',
                'verbose_name_plural': '답안(최종 제출용)',
            },
        ),
        migrations.CreateModel(
            name='PsatAnswerCount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('count_1', models.IntegerField(default=0)),
                ('count_2', models.IntegerField(default=0)),
                ('count_3', models.IntegerField(default=0)),
                ('count_4', models.IntegerField(default=0)),
                ('count_5', models.IntegerField(default=0)),
                ('count_total', models.IntegerField(default=0)),
                ('problem', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='answer_counts', to='reference.psatproblem')),
            ],
            options={
                'verbose_name': '답안 개수(통계용)',
                'verbose_name_plural': '답안 개수(통계용)',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='PrimeStudent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('year', models.IntegerField()),
                ('serial', models.CharField(blank=True, max_length=20, null=True)),
                ('round', models.IntegerField()),
                ('name', models.CharField(max_length=10)),
                ('password', models.IntegerField()),
                ('eoneo_score', models.FloatField(default=0)),
                ('jaryo_score', models.FloatField(default=0)),
                ('sanghwang_score', models.FloatField(default=0)),
                ('psat_score', models.FloatField(default=0)),
                ('heonbeob_score', models.FloatField(default=0)),
                ('user_id', models.IntegerField(default=0)),
                ('department', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='students', to='score.primedepartment')),
            ],
            options={
                'verbose_name': '수험 정보',
                'verbose_name_plural': '수험 정보',
            },
        ),
        migrations.CreateModel(
            name='PrimeAnswerCount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('count_0', models.IntegerField(default=0)),
                ('count_1', models.IntegerField(default=0)),
                ('count_2', models.IntegerField(default=0)),
                ('count_3', models.IntegerField(default=0)),
                ('count_4', models.IntegerField(default=0)),
                ('count_5', models.IntegerField(default=0)),
                ('count_total', models.IntegerField(default=0)),
                ('problem', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='answer_counts', to='reference.primeproblem')),
            ],
            options={
                'verbose_name': '답안 개수',
                'verbose_name_plural': '답안 개수',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='PrimeAnswer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('prob1', models.IntegerField(blank=True, null=True)),
                ('prob2', models.IntegerField(blank=True, null=True)),
                ('prob3', models.IntegerField(blank=True, null=True)),
                ('prob4', models.IntegerField(blank=True, null=True)),
                ('prob5', models.IntegerField(blank=True, null=True)),
                ('prob6', models.IntegerField(blank=True, null=True)),
                ('prob7', models.IntegerField(blank=True, null=True)),
                ('prob8', models.IntegerField(blank=True, null=True)),
                ('prob9', models.IntegerField(blank=True, null=True)),
                ('prob10', models.IntegerField(blank=True, null=True)),
                ('prob11', models.IntegerField(blank=True, null=True)),
                ('prob12', models.IntegerField(blank=True, null=True)),
                ('prob13', models.IntegerField(blank=True, null=True)),
                ('prob14', models.IntegerField(blank=True, null=True)),
                ('prob15', models.IntegerField(blank=True, null=True)),
                ('prob16', models.IntegerField(blank=True, null=True)),
                ('prob17', models.IntegerField(blank=True, null=True)),
                ('prob18', models.IntegerField(blank=True, null=True)),
                ('prob19', models.IntegerField(blank=True, null=True)),
                ('prob20', models.IntegerField(blank=True, null=True)),
                ('prob21', models.IntegerField(blank=True, null=True)),
                ('prob22', models.IntegerField(blank=True, null=True)),
                ('prob23', models.IntegerField(blank=True, null=True)),
                ('prob24', models.IntegerField(blank=True, null=True)),
                ('prob25', models.IntegerField(blank=True, null=True)),
                ('prob26', models.IntegerField(blank=True, null=True)),
                ('prob27', models.IntegerField(blank=True, null=True)),
                ('prob28', models.IntegerField(blank=True, null=True)),
                ('prob29', models.IntegerField(blank=True, null=True)),
                ('prob30', models.IntegerField(blank=True, null=True)),
                ('prob31', models.IntegerField(blank=True, null=True)),
                ('prob32', models.IntegerField(blank=True, null=True)),
                ('prob33', models.IntegerField(blank=True, null=True)),
                ('prob34', models.IntegerField(blank=True, null=True)),
                ('prob35', models.IntegerField(blank=True, null=True)),
                ('prob36', models.IntegerField(blank=True, null=True)),
                ('prob37', models.IntegerField(blank=True, null=True)),
                ('prob38', models.IntegerField(blank=True, null=True)),
                ('prob39', models.IntegerField(blank=True, null=True)),
                ('prob40', models.IntegerField(blank=True, null=True)),
                ('prime', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='prime_answers', to='reference.prime')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='student_answers', to='score.primestudent')),
            ],
            options={
                'verbose_name': '제출 답안',
                'verbose_name_plural': '제출 답안',
            },
        ),
        migrations.CreateModel(
            name='DummyStudent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user', models.IntegerField()),
                ('year', models.IntegerField(choices=[(2004, '2004년'), (2005, '2005년'), (2006, '2006년'), (2007, '2007년'), (2008, '2008년'), (2009, '2009년'), (2010, '2010년'), (2011, '2011년'), (2012, '2012년'), (2013, '2013년'), (2014, '2014년'), (2015, '2015년'), (2016, '2016년'), (2017, '2017년'), (2018, '2018년'), (2019, '2019년'), (2020, '2020년'), (2021, '2021년'), (2022, '2022년'), (2023, '2023년')])),
                ('serial', models.CharField(blank=True, max_length=20, null=True)),
                ('eoneo_score', models.FloatField(blank=True, null=True)),
                ('jaryo_score', models.FloatField(blank=True, null=True)),
                ('sanghwang_score', models.FloatField(blank=True, null=True)),
                ('psat_score', models.FloatField(blank=True, null=True)),
                ('department', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='dummy_students', to='score.department')),
            ],
            options={
                'verbose_name': '수험 정보',
                'verbose_name_plural': '수험 정보',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='DummyAnswer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('answer', models.IntegerField(verbose_name='제출 답안')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('confirmed_times', models.IntegerField(default=1, verbose_name='확정 횟수')),
                ('problem', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='dummy_answers', to='psat.problem')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='dummy_answers', to='score.dummystudent')),
            ],
            options={
                'verbose_name': '답안(테스트용)',
                'verbose_name_plural': '답안(테스트용)',
                'ordering': ['id'],
            },
        ),
        migrations.AddField(
            model_name='department',
            name='unit',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='departments', to='score.unit'),
        ),
        migrations.CreateModel(
            name='ConfirmedAnswer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('answer', models.IntegerField(verbose_name='제출 답안')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('confirmed_times', models.IntegerField(default=1, verbose_name='확정 횟수')),
                ('problem', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='confirmed_answers', to='psat.problem')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='confirmed_answers', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': '답안(최종 제출용)',
                'verbose_name_plural': '답안(최종 제출용)',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='AnswerCount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('count_1', models.IntegerField(default=0)),
                ('count_2', models.IntegerField(default=0)),
                ('count_3', models.IntegerField(default=0)),
                ('count_4', models.IntegerField(default=0)),
                ('count_5', models.IntegerField(default=0)),
                ('count_total', models.IntegerField(default=0)),
                ('problem', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='answer_counts', to='psat.problem')),
            ],
            options={
                'verbose_name': '답안 개수(통계용)',
                'verbose_name_plural': '답안 개수(통계용)',
                'ordering': ['id'],
            },
        ),
    ]
