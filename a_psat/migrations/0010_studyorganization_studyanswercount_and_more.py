# Generated by Django 5.1 on 2025-02-10 06:03

import a_psat.models.abstract_models
import a_psat.models.choices
import django.db.models.deletion
import django.db.models.functions.comparison
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('a_psat', '0009_alter_predictlocation_psat_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='StudyOrganization',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(choices=a_psat.models.choices.study_organization_choice, max_length=20, unique=True, verbose_name='이름')),
                ('logo', models.ImageField(upload_to='images/logo', verbose_name='로고')),
            ],
            options={
                'verbose_name': '[스터디] 04_교육기관',
                'verbose_name_plural': '[스터디] 04_교육기관',
                'db_table': 'a_psat_study_organization',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='StudyAnswerCount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('count_1', models.IntegerField(default=0, verbose_name='①')),
                ('count_2', models.IntegerField(default=0, verbose_name='②')),
                ('count_3', models.IntegerField(default=0, verbose_name='③')),
                ('count_4', models.IntegerField(default=0, verbose_name='④')),
                ('count_5', models.IntegerField(default=0, verbose_name='⑤')),
                ('count_0', models.IntegerField(default=0, verbose_name='미표기')),
                ('count_multiple', models.IntegerField(default=0, verbose_name='중복표기')),
                ('count_sum', models.IntegerField(default=0, verbose_name='총계')),
                ('answer_predict', models.GeneratedField(db_persist=True, expression=models.Case(models.When(models.Q(('count_1', django.db.models.functions.comparison.Greatest('count_1', 'count_2', 'count_3', 'count_4', 'count_5'))), then=models.Value(1)), models.When(models.Q(('count_2', django.db.models.functions.comparison.Greatest('count_1', 'count_2', 'count_3', 'count_4', 'count_5'))), then=models.Value(2)), models.When(models.Q(('count_3', django.db.models.functions.comparison.Greatest('count_1', 'count_2', 'count_3', 'count_4', 'count_5'))), then=models.Value(3)), models.When(models.Q(('count_4', django.db.models.functions.comparison.Greatest('count_1', 'count_2', 'count_3', 'count_4', 'count_5'))), then=models.Value(4)), models.When(models.Q(('count_5', django.db.models.functions.comparison.Greatest('count_1', 'count_2', 'count_3', 'count_4', 'count_5'))), then=models.Value(5)), default=None), output_field=models.IntegerField())),
                ('problem', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='study_answer_count', to='a_psat.problem')),
            ],
            options={
                'verbose_name': '[스터디] 08_답안 개수',
                'verbose_name_plural': '[스터디] 08_답안 개수',
                'db_table': 'a_psat_study_answer_count',
                'ordering': ['problem'],
            },
        ),
        migrations.CreateModel(
            name='StudyAnswerCountLowRank',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('count_1', models.IntegerField(default=0, verbose_name='①')),
                ('count_2', models.IntegerField(default=0, verbose_name='②')),
                ('count_3', models.IntegerField(default=0, verbose_name='③')),
                ('count_4', models.IntegerField(default=0, verbose_name='④')),
                ('count_5', models.IntegerField(default=0, verbose_name='⑤')),
                ('count_0', models.IntegerField(default=0, verbose_name='미표기')),
                ('count_multiple', models.IntegerField(default=0, verbose_name='중복표기')),
                ('count_sum', models.IntegerField(default=0, verbose_name='총계')),
                ('answer_predict', models.GeneratedField(db_persist=True, expression=models.Case(models.When(models.Q(('count_1', django.db.models.functions.comparison.Greatest('count_1', 'count_2', 'count_3', 'count_4', 'count_5'))), then=models.Value(1)), models.When(models.Q(('count_2', django.db.models.functions.comparison.Greatest('count_1', 'count_2', 'count_3', 'count_4', 'count_5'))), then=models.Value(2)), models.When(models.Q(('count_3', django.db.models.functions.comparison.Greatest('count_1', 'count_2', 'count_3', 'count_4', 'count_5'))), then=models.Value(3)), models.When(models.Q(('count_4', django.db.models.functions.comparison.Greatest('count_1', 'count_2', 'count_3', 'count_4', 'count_5'))), then=models.Value(4)), models.When(models.Q(('count_5', django.db.models.functions.comparison.Greatest('count_1', 'count_2', 'count_3', 'count_4', 'count_5'))), then=models.Value(5)), default=None), output_field=models.IntegerField())),
                ('problem', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='study_answer_count_low_rank', to='a_psat.problem')),
            ],
            options={
                'verbose_name': '[스터디] 13_답안 개수(하위권)',
                'verbose_name_plural': '[스터디] 13_답안 개수(하위권)',
                'db_table': 'a_psat_study_answer_count_low_rank',
                'ordering': ['problem'],
            },
        ),
        migrations.CreateModel(
            name='StudyAnswerCountMidRank',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('count_1', models.IntegerField(default=0, verbose_name='①')),
                ('count_2', models.IntegerField(default=0, verbose_name='②')),
                ('count_3', models.IntegerField(default=0, verbose_name='③')),
                ('count_4', models.IntegerField(default=0, verbose_name='④')),
                ('count_5', models.IntegerField(default=0, verbose_name='⑤')),
                ('count_0', models.IntegerField(default=0, verbose_name='미표기')),
                ('count_multiple', models.IntegerField(default=0, verbose_name='중복표기')),
                ('count_sum', models.IntegerField(default=0, verbose_name='총계')),
                ('answer_predict', models.GeneratedField(db_persist=True, expression=models.Case(models.When(models.Q(('count_1', django.db.models.functions.comparison.Greatest('count_1', 'count_2', 'count_3', 'count_4', 'count_5'))), then=models.Value(1)), models.When(models.Q(('count_2', django.db.models.functions.comparison.Greatest('count_1', 'count_2', 'count_3', 'count_4', 'count_5'))), then=models.Value(2)), models.When(models.Q(('count_3', django.db.models.functions.comparison.Greatest('count_1', 'count_2', 'count_3', 'count_4', 'count_5'))), then=models.Value(3)), models.When(models.Q(('count_4', django.db.models.functions.comparison.Greatest('count_1', 'count_2', 'count_3', 'count_4', 'count_5'))), then=models.Value(4)), models.When(models.Q(('count_5', django.db.models.functions.comparison.Greatest('count_1', 'count_2', 'count_3', 'count_4', 'count_5'))), then=models.Value(5)), default=None), output_field=models.IntegerField())),
                ('problem', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='study_answer_count_mid_rank', to='a_psat.problem')),
            ],
            options={
                'verbose_name': '[스터디] 12_답안 개수(중위권)',
                'verbose_name_plural': '[스터디] 12_답안 개수(중위권)',
                'db_table': 'a_psat_study_answer_count_mid_rank',
                'ordering': ['problem'],
            },
        ),
        migrations.CreateModel(
            name='StudyAnswerCountTopRank',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('count_1', models.IntegerField(default=0, verbose_name='①')),
                ('count_2', models.IntegerField(default=0, verbose_name='②')),
                ('count_3', models.IntegerField(default=0, verbose_name='③')),
                ('count_4', models.IntegerField(default=0, verbose_name='④')),
                ('count_5', models.IntegerField(default=0, verbose_name='⑤')),
                ('count_0', models.IntegerField(default=0, verbose_name='미표기')),
                ('count_multiple', models.IntegerField(default=0, verbose_name='중복표기')),
                ('count_sum', models.IntegerField(default=0, verbose_name='총계')),
                ('answer_predict', models.GeneratedField(db_persist=True, expression=models.Case(models.When(models.Q(('count_1', django.db.models.functions.comparison.Greatest('count_1', 'count_2', 'count_3', 'count_4', 'count_5'))), then=models.Value(1)), models.When(models.Q(('count_2', django.db.models.functions.comparison.Greatest('count_1', 'count_2', 'count_3', 'count_4', 'count_5'))), then=models.Value(2)), models.When(models.Q(('count_3', django.db.models.functions.comparison.Greatest('count_1', 'count_2', 'count_3', 'count_4', 'count_5'))), then=models.Value(3)), models.When(models.Q(('count_4', django.db.models.functions.comparison.Greatest('count_1', 'count_2', 'count_3', 'count_4', 'count_5'))), then=models.Value(4)), models.When(models.Q(('count_5', django.db.models.functions.comparison.Greatest('count_1', 'count_2', 'count_3', 'count_4', 'count_5'))), then=models.Value(5)), default=None), output_field=models.IntegerField())),
                ('problem', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='study_answer_count_top_rank', to='a_psat.problem')),
            ],
            options={
                'verbose_name': '[스터디] 11_답안 개수(상위권)',
                'verbose_name_plural': '[스터디] 11_답안 개수(상위권)',
                'db_table': 'a_psat_study_answer_count_top_rank',
                'ordering': ['problem'],
            },
        ),
        migrations.CreateModel(
            name='StudyCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('season', models.PositiveSmallIntegerField(default=1, verbose_name='시즌')),
                ('study_type', models.CharField(choices=a_psat.models.choices.study_category_choice, default='기본', max_length=5, verbose_name='종류')),
                ('name', models.CharField(max_length=20, verbose_name='카테고리명')),
            ],
            options={
                'verbose_name': '[스터디] 00_카테고리',
                'verbose_name_plural': '[스터디] 00_카테고리',
                'db_table': 'a_psat_study_category',
                'ordering': ['-season', 'study_type'],
                'constraints': [models.UniqueConstraint(fields=('season', 'study_type'), name='unique_psat_study_category')],
            },
        ),
        migrations.CreateModel(
            name='StudyCurriculum',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.PositiveSmallIntegerField(choices=a_psat.models.choices.year_choice, default=2025, verbose_name='연도')),
                ('semester', models.PositiveSmallIntegerField(choices=a_psat.models.choices.semester_choice, default=1, verbose_name='학기')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='curriculum', to='a_psat.studycategory')),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='curriculum', to='a_psat.studyorganization')),
            ],
            options={
                'verbose_name': '[스터디] 05_커리큘럼',
                'verbose_name_plural': '[스터디] 05_커리큘럼',
                'db_table': 'a_psat_study_curriculum',
                'ordering': ['-year', 'organization', 'semester'],
            },
        ),
        migrations.CreateModel(
            name='StudyPsat',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('round', models.PositiveSmallIntegerField(choices=a_psat.models.choices.study_round_choice, default=1, verbose_name='회차')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='psats', to='a_psat.studycategory')),
            ],
            options={
                'verbose_name': '[스터디] 01_PSAT',
                'verbose_name_plural': '[스터디] 01_PSAT',
                'db_table': 'a_psat_study_psat',
                'ordering': ['-category', 'round'],
            },
        ),
        migrations.CreateModel(
            name='StudyProblem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.PositiveSmallIntegerField(choices=a_psat.models.choices.number_choice, default=1, verbose_name='번호')),
                ('problem', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='study_problems', to='a_psat.problem')),
                ('psat', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='problems', to='a_psat.studypsat')),
            ],
            options={
                'verbose_name': '[스터디] 02_문제',
                'verbose_name_plural': '[스터디] 02_문제',
                'db_table': 'a_psat_study_problem',
                'ordering': ['psat', 'number'],
            },
        ),
        migrations.CreateModel(
            name='StudyStatistics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subject_1', models.JSONField(default=a_psat.models.abstract_models.get_default_statistics, verbose_name='언어논리')),
                ('subject_2', models.JSONField(default=a_psat.models.abstract_models.get_default_statistics, verbose_name='자료해석')),
                ('subject_3', models.JSONField(default=a_psat.models.abstract_models.get_default_statistics, verbose_name='상황판단')),
                ('average', models.JSONField(default=a_psat.models.abstract_models.get_default_statistics, verbose_name='PSAT')),
                ('psat', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='statistics', to='a_psat.studypsat')),
            ],
            options={
                'verbose_name': '[스터디] 03_통계',
                'verbose_name_plural': '[스터디] 03_통계',
                'db_table': 'a_psat_study_statistics',
                'ordering': ['-psat'],
            },
        ),
        migrations.CreateModel(
            name='StudyStudent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='생성 일시')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='수정 일시')),
                ('serial', models.CharField(max_length=10, verbose_name='수험번호')),
                ('name', models.CharField(max_length=20, verbose_name='이름')),
                ('curriculum', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attendances', to='a_psat.studycurriculum')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='psat_study_students', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': '[스터디] 06_학생',
                'verbose_name_plural': '[스터디] 06_학생',
                'db_table': 'a_psat_study_student',
            },
        ),
        migrations.CreateModel(
            name='StudyScore',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subject_1', models.FloatField(blank=True, null=True, verbose_name='언어논리')),
                ('subject_2', models.FloatField(blank=True, null=True, verbose_name='자료해석')),
                ('subject_3', models.FloatField(blank=True, null=True, verbose_name='상황판단')),
                ('sum', models.FloatField(blank=True, null=True, verbose_name='PSAT 총점')),
                ('average', models.FloatField(blank=True, null=True, verbose_name='PSAT 평균')),
                ('student', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='score', to='a_psat.studystudent')),
            ],
            options={
                'verbose_name': '[스터디] 09_점수',
                'verbose_name_plural': '[스터디] 09_점수',
                'db_table': 'a_psat_study_score',
                'ordering': ['student'],
            },
        ),
        migrations.CreateModel(
            name='StudyRank',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subject_1', models.IntegerField(blank=True, null=True, verbose_name='언어논리')),
                ('subject_2', models.IntegerField(blank=True, null=True, verbose_name='자료해석')),
                ('subject_3', models.IntegerField(blank=True, null=True, verbose_name='상황판단')),
                ('average', models.IntegerField(blank=True, null=True, verbose_name='PSAT')),
                ('participants', models.IntegerField(blank=True, null=True, verbose_name='총 인원')),
                ('student', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='rank', to='a_psat.studystudent')),
            ],
            options={
                'verbose_name': '[스터디] 10_등수',
                'verbose_name_plural': '[스터디] 10_등수',
                'db_table': 'a_psat_study_rank',
                'ordering': ['student'],
            },
        ),
        migrations.CreateModel(
            name='StudyAnswer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='생성 일시')),
                ('answer', models.IntegerField(choices=a_psat.models.choices.answer_choice, default=1, verbose_name='답안')),
                ('problem', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='university_answers', to='a_psat.studyproblem')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='answers', to='a_psat.studystudent')),
            ],
            options={
                'verbose_name': '[스터디] 07_답안',
                'verbose_name_plural': '[스터디] 07_답안',
                'db_table': 'a_psat_study_answer',
                'ordering': ['student', 'problem'],
            },
        ),
        migrations.AddConstraint(
            model_name='studycurriculum',
            constraint=models.UniqueConstraint(fields=('year', 'organization', 'semester'), name='unique_psat_study_curriculum'),
        ),
        migrations.AddConstraint(
            model_name='studypsat',
            constraint=models.UniqueConstraint(fields=('category', 'round'), name='unique_psat_study_psat'),
        ),
        migrations.AddConstraint(
            model_name='studyproblem',
            constraint=models.UniqueConstraint(fields=('psat', 'number'), name='unique_psat_study_problem'),
        ),
        migrations.AddConstraint(
            model_name='studyanswer',
            constraint=models.UniqueConstraint(fields=('student', 'problem'), name='unique_psat_study_answer'),
        ),
    ]
