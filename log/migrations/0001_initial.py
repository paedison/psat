# Generated by Django 3.2.19 on 2023-07-09 06:42

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('psat', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='RequestLog',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('session_key', models.TextField(blank=True, null=True)),
                ('log_url', models.TextField()),
                ('log_content', models.TextField()),
                ('user', models.ForeignKey(blank=True, db_column='user_id', null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='RateLog',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('user_id', models.IntegerField()),
                ('problem_id', models.IntegerField()),
                ('difficulty_rated', models.IntegerField(choices=[(1, '⭐️'), (2, '⭐️⭐️'), (3, '⭐️⭐️⭐️'), (4, '⭐️⭐️⭐️⭐️'), (5, '⭐️⭐️⭐️⭐️⭐️')])),
                ('evaluation', models.ForeignKey(blank=True, db_column='evaluation_id', null=True, on_delete=django.db.models.deletion.SET_NULL, to='psat.evaluation')),
            ],
        ),
        migrations.CreateModel(
            name='ProblemLog',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('user_id', models.IntegerField(blank=True, null=True)),
                ('session_key', models.TextField(blank=True, null=True)),
                ('problem_id', models.IntegerField()),
                ('evaluation', models.ForeignKey(blank=True, db_column='evaluation_id', null=True, on_delete=django.db.models.deletion.SET_NULL, to='psat.evaluation')),
            ],
        ),
        migrations.CreateModel(
            name='LikeLog',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('user_id', models.IntegerField()),
                ('problem_id', models.IntegerField()),
                ('is_liked', models.BooleanField()),
                ('evaluation', models.ForeignKey(blank=True, db_column='evaluation_id', null=True, on_delete=django.db.models.deletion.SET_NULL, to='psat.evaluation')),
            ],
        ),
        migrations.CreateModel(
            name='AnswerLog',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('user_id', models.IntegerField()),
                ('problem_id', models.IntegerField()),
                ('submitted_answer', models.IntegerField()),
                ('is_correct', models.BooleanField()),
                ('evaluation', models.ForeignKey(blank=True, db_column='evaluation_id', null=True, on_delete=django.db.models.deletion.SET_NULL, to='psat.evaluation')),
            ],
        ),
        migrations.CreateModel(
            name='AccountLog',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('session_key', models.TextField(blank=True, null=True)),
                ('log_url', models.TextField()),
                ('log_content', models.TextField()),
                ('user', models.ForeignKey(blank=True, db_column='user_id', null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
