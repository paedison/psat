# Generated by Django 5.0.3 on 2024-05-12 09:44

import ckeditor.fields
import ckeditor_uploader.fields
import django.db.models.deletion
import django.db.models.functions.text
import taggit.managers
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('reference', '0005_unit_unitdepartment'),
        ('taggit', '0006_rename_taggeditem_content_type_object_id_taggit_tagg_content_8fc721_idx'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Lecture',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('order', models.SmallIntegerField()),
                ('title', models.CharField(max_length=20)),
                ('sub_title', models.CharField(max_length=50)),
                ('youtube_id', models.CharField(blank=True, max_length=20, null=True)),
                ('content', ckeditor_uploader.fields.RichTextUploadingField()),
                ('youtube_url', models.GeneratedField(db_persist=False, expression=models.Case(models.When(then=models.Value(None), youtube_id=None), default=django.db.models.functions.text.Concat(models.Value('https://youtu.be/'), 'youtube_id'), output_field=models.URLField()), output_field=models.URLField())),
                ('thumbnail_url', models.GeneratedField(db_persist=False, expression=models.Case(models.When(then=models.Value(None), youtube_id=None), default=django.db.models.functions.text.Concat(models.Value('https://img.youtube.com/vi/'), 'youtube_id', models.Value('/maxresdefault.jpg')), output_field=models.URLField()), output_field=models.URLField())),
                ('embed_src', models.GeneratedField(db_persist=False, expression=models.Case(models.When(then=models.Value(None), youtube_id=None), default=django.db.models.functions.text.Concat(models.Value('https://www.youtube.com/embed/'), 'youtube_id'), output_field=models.URLField()), output_field=models.URLField())),
                ('subject', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lectures', to='reference.subject')),
            ],
            options={
                'ordering': ['subject', 'order'],
            },
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('title', models.TextField(max_length=100)),
                ('comment', ckeditor.fields.RichTextField()),
                ('hit', models.IntegerField(default=1, verbose_name='조회수')),
                ('is_deleted', models.BooleanField(default=False)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='reply_comments', to='lecture.comment')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lecture_comments', to=settings.AUTH_USER_MODEL)),
                ('lecture', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='lecture.lecture')),
            ],
        ),
        migrations.CreateModel(
            name='Memo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(auto_now=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user_id', models.IntegerField()),
                ('memo', ckeditor.fields.RichTextField()),
                ('lecture', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)ss', to='lecture.lecture')),
            ],
            options={
                'ordering': ['-id'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(auto_now=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user_id', models.IntegerField()),
                ('lecture', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)ss', to='lecture.lecture')),
                ('tags', taggit.managers.TaggableManager(help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Tags')),
            ],
            options={
                'verbose_name': 'Tagged lecture',
                'verbose_name_plural': 'Tagged lectures',
                'unique_together': {('user_id', 'lecture')},
            },
        ),
    ]
