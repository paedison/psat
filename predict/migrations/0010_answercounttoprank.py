# Generated by Django 5.0.2 on 2024-03-15 07:19

import django.db.models.deletion
import django.db.models.expressions
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('predict', '0009_exam_answer_predict_open_datetime_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='AnswerCountTopRank',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('count_0', models.IntegerField(default=0)),
                ('count_1', models.IntegerField(default=0)),
                ('count_2', models.IntegerField(default=0)),
                ('count_3', models.IntegerField(default=0)),
                ('count_4', models.IntegerField(default=0)),
                ('count_5', models.IntegerField(default=0)),
                ('count_total', models.IntegerField(default=1)),
                ('rate_0', models.GeneratedField(db_persist=False, expression=django.db.models.expressions.CombinedExpression(django.db.models.expressions.CombinedExpression(models.F('count_0'), '*', models.Value(100)), '/', models.F('count_total')), output_field=models.FloatField())),
                ('rate_1', models.GeneratedField(db_persist=False, expression=django.db.models.expressions.CombinedExpression(django.db.models.expressions.CombinedExpression(models.F('count_1'), '*', models.Value(100)), '/', models.F('count_total')), output_field=models.FloatField())),
                ('rate_2', models.GeneratedField(db_persist=False, expression=django.db.models.expressions.CombinedExpression(django.db.models.expressions.CombinedExpression(models.F('count_2'), '*', models.Value(100)), '/', models.F('count_total')), output_field=models.FloatField())),
                ('rate_3', models.GeneratedField(db_persist=False, expression=django.db.models.expressions.CombinedExpression(django.db.models.expressions.CombinedExpression(models.F('count_3'), '*', models.Value(100)), '/', models.F('count_total')), output_field=models.FloatField())),
                ('rate_4', models.GeneratedField(db_persist=False, expression=django.db.models.expressions.CombinedExpression(django.db.models.expressions.CombinedExpression(models.F('count_4'), '*', models.Value(100)), '/', models.F('count_total')), output_field=models.FloatField())),
                ('rate_5', models.GeneratedField(db_persist=False, expression=django.db.models.expressions.CombinedExpression(django.db.models.expressions.CombinedExpression(models.F('count_5'), '*', models.Value(100)), '/', models.F('count_total')), output_field=models.FloatField())),
                ('rate_None', models.IntegerField(default=0)),
                ('sub', models.CharField(choices=[('헌법', '헌법'), ('언어', '언어논리'), ('자료', '자료해석'), ('상황', '상황판단')], max_length=2)),
                ('number', models.IntegerField()),
                ('answer', models.IntegerField(blank=True, null=True)),
                ('exam', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='answer_counts_top_rank', to='predict.exam')),
            ],
            options={
                'verbose_name': '상위권 성적 예측 답안 개수',
                'verbose_name_plural': '상위권 성적 예측 답안 개수',
            },
        ),
    ]
