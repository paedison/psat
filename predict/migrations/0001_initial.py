# Generated by Django 5.0.1 on 2024-02-18 04:43

import django.db.models.deletion
import django.db.models.expressions
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Exam',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('category', models.CharField(max_length=20)),
                ('year', models.IntegerField()),
                ('ex', models.CharField(choices=[('행시', '5급공채'), ('입시', '입법고시'), ('칠급', '7급공채'), ('민경', '민간경력'), ('프모', '프라임 모의고사')], max_length=2)),
                ('round', models.IntegerField()),
                ('exam_date', models.DateTimeField()),
                ('answer_file', models.GeneratedField(db_persist=False, expression=models.Value('answer_file_F(category)_F(year)F(ex)-F(round).csv'), output_field=models.FilePathField(path='C:\\projects\\paedison3\\predict\\models\\data'))),
                ('answer_open_date', models.DateTimeField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='AnswerCount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('count_0', models.IntegerField(default=0)),
                ('count_1', models.IntegerField(default=0)),
                ('count_2', models.IntegerField(default=0)),
                ('count_3', models.IntegerField(default=0)),
                ('count_4', models.IntegerField(default=0)),
                ('count_5', models.IntegerField(default=0)),
                ('count_total', models.IntegerField(default=1)),
                ('rate_0', models.GeneratedField(db_persist=False, expression=django.db.models.expressions.CombinedExpression(django.db.models.expressions.CombinedExpression(models.F('count_0'), '*', models.Value(100)), '/', models.F('count_total')), output_field=models.FloatField())),
                ('rate_1', models.GeneratedField(db_persist=False, expression=django.db.models.expressions.CombinedExpression(django.db.models.expressions.CombinedExpression(models.F('count_1'), '*', models.Value(100)), '/', models.F('count_total')), output_field=models.FloatField())),
                ('rate_2', models.GeneratedField(db_persist=False, expression=django.db.models.expressions.CombinedExpression(django.db.models.expressions.CombinedExpression(models.F('count_2'), '*', models.Value(100)), '/', models.F('count_total')), output_field=models.FloatField())),
                ('rate_3', models.GeneratedField(db_persist=False, expression=django.db.models.expressions.CombinedExpression(django.db.models.expressions.CombinedExpression(models.F('count_3'), '*', models.Value(100)), '/', models.F('count_total')), output_field=models.FloatField())),
                ('rate_4', models.GeneratedField(db_persist=False, expression=django.db.models.expressions.CombinedExpression(django.db.models.expressions.CombinedExpression(models.F('count_4'), '*', models.Value(100)), '/', models.F('count_total')), output_field=models.FloatField())),
                ('rate_5', models.GeneratedField(db_persist=False, expression=django.db.models.expressions.CombinedExpression(django.db.models.expressions.CombinedExpression(models.F('count_5'), '*', models.Value(100)), '/', models.F('count_total')), output_field=models.FloatField())),
                ('rate_None', models.IntegerField(default=0)),
                ('sub', models.CharField(choices=[('헌법', '헌법'), ('언어', '언어논리'), ('자료', '자료해석'), ('상황', '상황판단')], max_length=2)),
                ('number', models.IntegerField()),
                ('answer', models.IntegerField(blank=True, null=True)),
                ('exam', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='answer_counts', to='predict.exam')),
            ],
            options={
                'verbose_name': '성적 예측 답안 개수',
                'verbose_name_plural': '성적 예측 답안 개수',
            },
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user_id', models.IntegerField()),
                ('name', models.CharField(max_length=20)),
                ('serial', models.CharField(max_length=10)),
                ('password', models.IntegerField()),
                ('department_id', models.IntegerField()),
                ('exam', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='students', to='predict.exam')),
            ],
            options={
                'verbose_name': '성적 예측 수험 정보',
                'verbose_name_plural': '성적 예측 수험 정보',
            },
        ),
        migrations.CreateModel(
            name='StatisticsVirtual',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('score_heonbeob', models.FloatField(blank=True, null=True)),
                ('score_eoneo', models.FloatField(blank=True, null=True)),
                ('score_jaryo', models.FloatField(blank=True, null=True)),
                ('score_sanghwang', models.FloatField(blank=True, null=True)),
                ('score_psat', models.FloatField(blank=True, null=True)),
                ('score_psat_avg', models.FloatField(blank=True, null=True)),
                ('rank_total_heonbeob', models.PositiveIntegerField(blank=True, null=True)),
                ('rank_total_eoneo', models.PositiveIntegerField(blank=True, null=True)),
                ('rank_total_jaryo', models.PositiveIntegerField(blank=True, null=True)),
                ('rank_total_sanghwang', models.PositiveIntegerField(blank=True, null=True)),
                ('rank_total_psat', models.PositiveIntegerField(blank=True, null=True)),
                ('rank_department_heonbeob', models.PositiveIntegerField(blank=True, null=True)),
                ('rank_department_eoneo', models.PositiveIntegerField(blank=True, null=True)),
                ('rank_department_jaryo', models.PositiveIntegerField(blank=True, null=True)),
                ('rank_department_sanghwang', models.PositiveIntegerField(blank=True, null=True)),
                ('rank_department_psat', models.PositiveIntegerField(blank=True, null=True)),
                ('rank_ratio_total_heonbeob', models.FloatField(blank=True, null=True)),
                ('rank_ratio_total_eoneo', models.FloatField(blank=True, null=True)),
                ('rank_ratio_total_jaryo', models.FloatField(blank=True, null=True)),
                ('rank_ratio_total_sanghwang', models.FloatField(blank=True, null=True)),
                ('rank_ratio_total_psat', models.FloatField(blank=True, null=True)),
                ('rank_ratio_department_heonbeob', models.FloatField(blank=True, null=True)),
                ('rank_ratio_department_eoneo', models.FloatField(blank=True, null=True)),
                ('rank_ratio_department_jaryo', models.FloatField(blank=True, null=True)),
                ('rank_ratio_department_sanghwang', models.FloatField(blank=True, null=True)),
                ('rank_ratio_department_psat', models.FloatField(blank=True, null=True)),
                ('student', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='statistics_virtual', to='predict.student')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Statistics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('score_heonbeob', models.FloatField(blank=True, null=True)),
                ('score_eoneo', models.FloatField(blank=True, null=True)),
                ('score_jaryo', models.FloatField(blank=True, null=True)),
                ('score_sanghwang', models.FloatField(blank=True, null=True)),
                ('score_psat', models.FloatField(blank=True, null=True)),
                ('score_psat_avg', models.FloatField(blank=True, null=True)),
                ('rank_total_heonbeob', models.PositiveIntegerField(blank=True, null=True)),
                ('rank_total_eoneo', models.PositiveIntegerField(blank=True, null=True)),
                ('rank_total_jaryo', models.PositiveIntegerField(blank=True, null=True)),
                ('rank_total_sanghwang', models.PositiveIntegerField(blank=True, null=True)),
                ('rank_total_psat', models.PositiveIntegerField(blank=True, null=True)),
                ('rank_department_heonbeob', models.PositiveIntegerField(blank=True, null=True)),
                ('rank_department_eoneo', models.PositiveIntegerField(blank=True, null=True)),
                ('rank_department_jaryo', models.PositiveIntegerField(blank=True, null=True)),
                ('rank_department_sanghwang', models.PositiveIntegerField(blank=True, null=True)),
                ('rank_department_psat', models.PositiveIntegerField(blank=True, null=True)),
                ('rank_ratio_total_heonbeob', models.FloatField(blank=True, null=True)),
                ('rank_ratio_total_eoneo', models.FloatField(blank=True, null=True)),
                ('rank_ratio_total_jaryo', models.FloatField(blank=True, null=True)),
                ('rank_ratio_total_sanghwang', models.FloatField(blank=True, null=True)),
                ('rank_ratio_total_psat', models.FloatField(blank=True, null=True)),
                ('rank_ratio_department_heonbeob', models.FloatField(blank=True, null=True)),
                ('rank_ratio_department_eoneo', models.FloatField(blank=True, null=True)),
                ('rank_ratio_department_jaryo', models.FloatField(blank=True, null=True)),
                ('rank_ratio_department_sanghwang', models.FloatField(blank=True, null=True)),
                ('rank_ratio_department_psat', models.FloatField(blank=True, null=True)),
                ('student', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='statistics', to='predict.student')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Answer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('sub', models.CharField(choices=[('헌법', '헌법'), ('언어', '언어논리'), ('자료', '자료해석'), ('상황', '상황판단')], max_length=2)),
                ('is_confirmed', models.BooleanField(default=False)),
                ('prob1', models.IntegerField(blank=True, null=True)),
                ('prob2', models.IntegerField(blank=True, null=True)),
                ('prob3', models.IntegerField(blank=True, null=True)),
                ('prob4', models.IntegerField(blank=True, null=True)),
                ('prob5', models.IntegerField(blank=True, null=True)),
                ('prob6', models.IntegerField(blank=True, null=True)),
                ('prob7', models.IntegerField(blank=True, null=True)),
                ('prob8', models.IntegerField(blank=True, null=True)),
                ('prob9', models.IntegerField(blank=True, null=True)),
                ('prob10', models.IntegerField(blank=True, null=True)),
                ('prob11', models.IntegerField(blank=True, null=True)),
                ('prob12', models.IntegerField(blank=True, null=True)),
                ('prob13', models.IntegerField(blank=True, null=True)),
                ('prob14', models.IntegerField(blank=True, null=True)),
                ('prob15', models.IntegerField(blank=True, null=True)),
                ('prob16', models.IntegerField(blank=True, null=True)),
                ('prob17', models.IntegerField(blank=True, null=True)),
                ('prob18', models.IntegerField(blank=True, null=True)),
                ('prob19', models.IntegerField(blank=True, null=True)),
                ('prob20', models.IntegerField(blank=True, null=True)),
                ('prob21', models.IntegerField(blank=True, null=True)),
                ('prob22', models.IntegerField(blank=True, null=True)),
                ('prob23', models.IntegerField(blank=True, null=True)),
                ('prob24', models.IntegerField(blank=True, null=True)),
                ('prob25', models.IntegerField(blank=True, null=True)),
                ('prob26', models.IntegerField(blank=True, null=True)),
                ('prob27', models.IntegerField(blank=True, null=True)),
                ('prob28', models.IntegerField(blank=True, null=True)),
                ('prob29', models.IntegerField(blank=True, null=True)),
                ('prob30', models.IntegerField(blank=True, null=True)),
                ('prob31', models.IntegerField(blank=True, null=True)),
                ('prob32', models.IntegerField(blank=True, null=True)),
                ('prob33', models.IntegerField(blank=True, null=True)),
                ('prob34', models.IntegerField(blank=True, null=True)),
                ('prob35', models.IntegerField(blank=True, null=True)),
                ('prob36', models.IntegerField(blank=True, null=True)),
                ('prob37', models.IntegerField(blank=True, null=True)),
                ('prob38', models.IntegerField(blank=True, null=True)),
                ('prob39', models.IntegerField(blank=True, null=True)),
                ('prob40', models.IntegerField(blank=True, null=True)),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='answers', to='predict.student')),
            ],
            options={
                'verbose_name': '성적 예측 제출 답안',
                'verbose_name_plural': '성적 예측 제출 답안',
            },
        ),
    ]
